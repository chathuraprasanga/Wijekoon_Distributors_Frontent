name: Deploy Wijekoon Distributors Frontend to Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Wijekoon Distributors Frontend Deployment
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up SSH agent
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

      # Test SSH connection
      - name: Test SSH Connection
        run: |
          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} "echo 'SSH connection successful!'"

      # Build Frontend
      - name: Build Frontend
        run: |
          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            set -e
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # Load nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # Load nvm bash_completion
            nvm use node # Activate the correct Node.js version
            echo "Node version: $(node -v)"
            echo "npm version: $(npm -v)"

            # Navigate to the frontend directory
            cd /var/www/wijekoon-distributors/frontend

            # Ensure the latest code from the main branch is pulled
            git pull origin main

            # Clean previous build (only if the build exists)
            if [ -d "dist" ]; then
              sudo rm -rf dist
              echo "Previous build deleted."
            fi

            # Cache node_modules (using npm ci instead of npm install for faster installs)
            if [ ! -d "node_modules" ]; then
              npm install --production --legacy-peer-deps
            fi

            # Set node memory limit to reduce memory pressure
            export NODE_OPTIONS="--max_old_space_size=512"

            # Run linting
            npm run lint

            # Build the project
            npm run build
          EOF

      # Restart Nginx
      - name: Restart Nginx
        run: |
          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            sudo systemctl restart nginx.service
          EOF
