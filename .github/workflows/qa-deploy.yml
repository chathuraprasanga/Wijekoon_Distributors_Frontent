name: Deploy Wijekoon Distributors Frontend to Droplet

on:
  push:
    branches:
      - qa

jobs:
  deploy:
    name: Wijekoon Distributors QA Frontend Deployment
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # ✅ Install Node.js
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # ✅ Install dependencies and build frontend
      - name: Install dependencies and build frontend
        run: |
          npm install
          npm run build:qa
          tar -czf frontend-dist.tar.gz dist

      # ✅ Set up SSH agent
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

      # ✅ Directly Copy `dist` to the VPS
      - name: Copy Frontend Build to VPS
        run: |
          scp -o StrictHostKeyChecking=no frontend-dist.tar.gz ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:/var/www/qa/qa-wd-app/

      # ✅ Extract and Deploy Frontend on VPS
      - name: Deploy Frontend to VPS
        run: |
          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            set -e

            # Load NVM if available
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm use node || echo "NVM not found, skipping..."

            cd /var/www/qa/qa-wd-app
            git pull origin qa

            # Remove old dist folder and extract new one
            rm -rf dist
            tar -xzf frontend-dist.tar.gz

            # Clean up
            rm frontend-dist.tar.gz
          EOF

      # ✅ Restart Nginx
      - name: Restart Nginx
        run: |
          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            sudo systemctl restart nginx
          EOF
